D1 <- c(4.2, 2.7, 3.1, 4.6,  1.2)
D2 <- c(8.4, 4.5, 4.9, 7.3, 5.7)
D3 <- c(3, 3.8, 2, 2.1, 3.2)
D4 <- c(4.9, 2.8, 6.1, 4.2, 3.7)
x = c(D1, D2, D3, D4)
x
Displays <- c(rep("D1",5), rep("D2",5), rep("D3",5), rep("D4",5))
data <- data.frame(x, Displays)
Displays
data
av <- aov(x ~ Displays)
av
summary(av)
t025 <- abs(qt(0.025,16))
confidence_interval_under <- 3.2 + t025*(5-1)*(sqrt(1.66)/sqrt(5))
confidence_interval_under
t025 <- abs(qt(0.025))
t025 <- abs(qt(0.025,0))
t025
t025 <- abs(qt(0.025,16))
t025
confidence_interval_under <- 3.2 + t025*(sqrt(1.66)/sqrt(5))
confidence_interval_under
confidence_interval_under <- 3.2 - t025*(sqrt(1.66)/sqrt(5))
confidence_interval_under
khoang_tin_cay_tren <- 3.2 + t025*(sqrt(1.66)/sqrt(5))
khoang_tin_cay_duoi <- 3.2 - t025*(sqrt(1.66)/sqrt(5))
khoang_tin_cay_tren
khoang_tin_cay_duoi
rm(list=ls())
A <- c(30.5
28.8
28
27.1
30.1
30.8
26.9
28.8
30
29)
A <- c(30.5,
28.8,
28,
27.1,
30.1,
30.8,
26.9,
28.8,
30,
29)
A
B <- c(32,
26.6,
34.2,
28.7,
32.8,
30.6,
32.8,
29.4,
31.9,
31)
B
t.test(A,B)
D1 <- c(4.2, 2.7, 3.1, 4.6,  1.2)
D1
t.test(A)
clear
x <- c(A,B)
Displays <- c(rep("A",9), rep("B"),9)
Displays
Displays <- c(rep("A",9), rep("B",9))
Displays
data <- data.frame(x, Displays)
x <- c(A,B)
x
Displays <- c(rep("A",10), rep("B",10))
data <- data.frame(x, Displays)
data
av <- aov(x ~ Displays)
summary(av)
S <- sqrt(3.483)
S
ttest <- t.test(A,B)
summary(ttest)
t025_25 = abs(qt(0.025,25))
t025_25
t025 <- abs(qt(0.025,22))
t025
D1 <- c(	3.5,	3.6,	3.7,	4.2,	3.8,	3.9,	3.2)
D2 <- c(3.4,	3.7,	3.8,	3.9,	3.6,	3.5,	3.3,	3.6)
D3 <- c(3.5,	3.2,	3.6,	4.0,	3.6,	3.1)
D4 <- c(3.7,	3.8,	3.9,	4.2,	4.4,	3.9,	3.8,	4.3)
x = c(D1, D2, D3, D4)
Displays <- c(rep("D1",7), rep("D2",8), rep("D3",6), rep("D4",8))
data <- data.frame(x, Displays)
av <- aov(x ~ Displays)
summary(av)
df <- read.csv('final.csv')
boxplot(df$pm25~factor(df$MO),
xlab = "MO", ylab = "pm25")
mo_temper_aov <- aov(df$pm25~factor(df$MO), data=df)
# Summary of the analysis
summary(mo_temper_aov)
df$MO <- factor(df$MO,
levels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12),
labels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"))
mo_temper_aov <- aov(df$pm25~factor(df$MO), data=df)
boxplot(df$pm25~factor(df$MO),
xlab = "MO", ylab = "pm25")
mo_temper_aov <- aov(df$pm25~factor(df$MO), data=df)
# Summary of the analysis
summary(mo_temper_aov)
df2wanova <- df
View(df2wanova)
df2wanova %>% anova_test(pm25 ~ MO)
install.packages('rstatix')
library(rstatix)
library(rstatix)
df2wanova %>% anova_test(pm25 ~ MO)
df2wanova %>% anova_test(pm25 ~ MO*Temperature)
df2wanova %>% anova_test(pm25 ~ MO*Relative_Humidity)
df2wanova %>% anova_test(pm25 ~ MO*Specific_Humidity)
df2wanova %>% anova_test(pm25 ~ MO*Pressure)
df2wanova %>% anova_test(pm25 ~ MO*Precipitation)
df2wanova %>% anova_test(pm25 ~ MO*Wind_Speed)
df2wanova %>% anova_test(pm25 ~ MO*Wind_Direction)
df2wanova %>% anova_test(Temperature ~ MO*Pressure)
install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(df2wanova$pm25, SplitRatio = 2/3)
training_set = subset(df2wanova, split == TRUE)
test_set = subset(df2wanova, split == FALSE)
str(df2wanova)
regressor = lm(formula = pm25 ~ YEAR + MO + DY + Temperature+ Relative_Humidity+
Specific_Humidity+Precipitation+Pressure+Wind_Speed+Wind_Direction,
data = training_set)
y_pred = predict(regressor, newdata = test_set)
library(Metrics)
install.packages('Metrics')
library(Metrics)
y_pred = predict(regressor, newdata = test_set)
rmse(training_set$pm25, y_pred)
rmse(test_set$pm25, y_pred)
summary(regressor)
df$YEAR <- factor(df$YEAR,
levels = c(2017, 2018, 2019, 2020, 2021),
labels = c("2017", "2018", "2019", "2020", "2021"))
df$DY <- factor(df$DY,
levels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31),
labels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"))
df <- read.csv('final.csv')
df$MO <- factor(df$MO,
levels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12),
labels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"))
df$YEAR <- factor(df$YEAR,
levels = c(2017, 2018, 2019, 2020, 2021),
labels = c("2017", "2018", "2019", "2020", "2021"))
df$DY <- factor(df$DY,
levels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31),
labels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"))
df2wanova <- df
str(df2wanova)
set.seed(123)
split = sample.split(df2wanova$pm25, SplitRatio = 2/3)
training_set = subset(df2wanova, split == TRUE)
test_set = subset(df2wanova, split == FALSE)
regressor = lm(formula = pm25 ~ YEAR + MO + DY + Temperature+ Relative_Humidity+
Specific_Humidity+Precipitation+Pressure+Wind_Speed+Wind_Direction,
data = training_set)
y_pred = predict(regressor, newdata = test_set)
rmse(test_set$pm25, y_pred)
summary(regressor)
df <- read.csv('final.csv')
df2wanova <- df
split = sample.split(df2wanova$pm25, SplitRatio = 2/3)
training_set = subset(df2wanova, split == TRUE)
test_set = subset(df2wanova, split == FALSE)
regressor = lm(formula = pm25 ~ YEAR + MO + DY + Temperature+ Relative_Humidity+
Specific_Humidity+Precipitation+Pressure+Wind_Speed+Wind_Direction,
data = training_set)
y_pred = predict(regressor, newdata = test_set)
rmse(test_set$pm25, y_pred)
summary(regressor)
regressor_tn = lm(formula = pm25 ~ Relative_Humidity * Specific_Humidity,
data = training_set)
y_pred_tn = predict(regressor_tn, newdata = test_set)
rmse(test_set$pm25, y_pred_tn)
summary(regressor_tn)
regressor_tn = lm(formula = pm25 ~ Relative_Humidity * Precipitation,
data = training_set)
y_pred_tn = predict(regressor_tn, newdata = test_set)
rmse(test_set$pm25, y_pred_tn)
summary(regressor_tn)
regressor_tn = lm(formula = pm25 ~ Relative_Humidity * Pressure,
data = training_set)
y_pred_tn = predict(regressor_tn, newdata = test_set)
rmse(test_set$pm25, y_pred_tn)
summary(regressor_tn)
regressor_tn = lm(formula = pm25 ~ Relative_Humidity * Wind_Speed,
data = training_set)
summary(regressor_tn)
regressor_tn = lm(formula = pm25 ~ Relative_Humidity * Wind_Direction,
data = training_set)
summary(regressor_tn)
regressor_tn = lm(formula = pm25 ~ Temperature * Wind_Direction,
data = training_set)
y_pred_tn = predict(regressor_tn, newdata = test_set)
rmse(test_set$pm25, y_pred_tn)
summary(regressor_tn)
regressor_tn = lm(formula = pm25 ~ Precipitation * Wind_Direction,
data = training_set)
y_pred_tn = predict(regressor_tn, newdata = test_set)
summary(regressor_tn)
rmse(test_set$pm25, y_pred_tn)
summary(regressor_tn)
regressor_tn = lm(formula = pm25 ~ Wind_Speed * Wind_Direction,
data = training_set)
y_pred_tn = predict(regressor_tn, newdata = test_set)
rmse(test_set$pm25, y_pred_tn)
summary(regressor_tn)
regressor_tn = lm(formula = pm25 ~ MO + (Relative_Humidity + Specific_Humidity + Precipitation
+ Pressuse + Wind_Speed),
data = training_set)
regressor_tn = lm(formula = pm25 ~ MO + (Relative_Humidity + Specific_Humidity + Precipitation
+ Pressure + Wind_Speed),
data = training_set)
y_pred_tn = predict(regressor_tn, newdata = test_set)
rmse(test_set$pm25, y_pred_tn)
summary(regressor_tn)
regressor_tn = lm(formula = pm25 ~ MO + (Relative_Humidity * Specific_Humidity * Precipitation
* Pressure * Wind_Speed),
data = training_set)
y_pred_tn = predict(regressor_tn, newdata = test_set)
rmse(test_set$pm25, y_pred_tn)
summary(regressor_tn)
regressor_tn = lm(formula = pm25 ~ MO * (Relative_Humidity + Specific_Humidity + Precipitation
+ Pressure + Wind_Speed),
data = training_set)
y_pred_tn = predict(regressor_tn, newdata = test_set)
rmse(test_set$pm25, y_pred_tn)
summary(regressor_tn)
